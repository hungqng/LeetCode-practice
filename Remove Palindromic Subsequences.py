# 1332. Remove Palindromic Subsequences

# You are given a string s consisting only of letters 'a' and 'b'. In a single step you can remove one palindromic subsequence from s.

# Return the minimum number of steps to make the given string empty.

# A string is a subsequence of a given string if it is generated by deleting some characters of a given string without changing its order. Note that a subsequence does not necessarily need to be contiguous.

# A string is called palindrome if is one that reads the same backward as well as forward.

class Solution:
    def removePalindromeSub(self, s: str) -> int:
        return 2 - (s == s[::-1]) - (s == "")

        # Solution 2
        if not s: return 0
        l, r = 0, len(s) - 1
        
        while l < r:
            if s[l] != s[r]: return 2
            l += 1
            r -= 1
        return 1

        # Solution 3
        if not s: return 0
        return 1 if s == s[::-1] else 2